// API –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –¥–ª—è CookBook
class CookBookAPI {
    constructor() {
        this.baseURL = '/api';
    }

    // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã
    async getRecipes() {
        try {
            const response = await fetch(`${this.baseURL}/recipes/`);
            const data = await response.json();
            return data;
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤:', error);
            return null;
        }
    }

    // –ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ —Ä–µ—Ü–µ–ø—Ç–∞
    async getRecipeDetail(id) {
        try {
            const response = await fetch(`${this.baseURL}/recipes/${id}/`);
            const data = await response.json();
            return data;
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ—Ü–µ–ø—Ç–∞:', error);
            return null;
        }
    }

    // –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    async getCategories() {
        try {
            const response = await fetch(`${this.baseURL}/categories/`);
            const data = await response.json();
            return data;
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
            return null;
        }
    }

    // –ü–æ–∏—Å–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤
    async searchRecipes(query) {
        try {
            const response = await fetch(`${this.baseURL}/recipes/?search=${encodeURIComponent(query)}`);
            const data = await response.json();
            return data;
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ:', error);
            return null;
        }
    }

    // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã API
    async demonstrateAPI() {
        console.log('=== CookBook API Demo ===');
        
        // –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ü–µ–ø—Ç—ã
        const recipes = await this.getRecipes();
        if (recipes && recipes.results) {
            console.log('üìö –í—Å–µ–≥–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤:', recipes.count);
            console.log('üìñ –ü–µ—Ä–≤—ã–µ 3 —Ä–µ—Ü–µ–ø—Ç–∞:', recipes.results.slice(0, 3));
        }

        // –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        const categories = await this.getCategories();
        if (categories && categories.results) {
            console.log('üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:', categories.results);
        }

        // –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã, –ø–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ –ø–µ—Ä–≤–æ–≥–æ
        if (recipes && recipes.results && recipes.results.length > 0) {
            const firstRecipeId = recipes.results[0].id;
            const recipeDetail = await this.getRecipeDetail(firstRecipeId);
            console.log('üîç –î–µ—Ç–∞–ª–∏ –ø–µ—Ä–≤–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞:', recipeDetail);
        }
    }
}

// –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
function createAPIDemoSection() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ª–∏ —É–∂–µ —Å–µ–∫—Ü–∏—è
    if (document.querySelector('.api-demo')) {
        return;
    }

    const apiDemoHTML = `
        <section class="api-demo" style="background: #f8f9fa; padding: 40px 0; margin: 40px 0; border-top: 1px solid #ddd;">
            <div class="container">
                <h2 style="text-align: center; margin-bottom: 30px; color: #2c3e50;">üéØ API –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è</h2>
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px;">
                    <div class="api-card" style="background: white; padding: 25px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
                        <h3 style="color: #e74c3c; margin-bottom: 20px;">üìö –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã API</h3>
                        <ul style="list-style: none; padding: 0;">
                            <li style="margin: 15px 0; padding: 10px; background: #f8f9fa; border-radius: 5px;">
                                <strong>GET /api/recipes/</strong>
                                <br><small style="color: #666;">–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤ –≤ JSON</small>
                            </li>
                            <li style="margin: 15px 0; padding: 10px; background: #f8f9fa; border-radius: 5px;">
                                <strong>GET /api/recipes/1/</strong>
                                <br><small style="color: #666;">–î–µ—Ç–∞–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞</small>
                            </li>
                            <li style="margin: 15px 0; padding: 10px; background: #f8f9fa; border-radius: 5px;">
                                <strong>GET /api/categories/</strong>
                                <br><small style="color: #666;">–°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π</small>
                            </li>
                        </ul>
                    </div>
                    <div class="api-test" style="background: white; padding: 25px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
                        <h3 style="color: #e74c3c; margin-bottom: 20px;">üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API</h3>
                        <button onclick="testAPI()" style="background: #e74c3c; color: white; border: none; padding: 12px 24px; border-radius: 5px; cursor: pointer; margin: 10px 0; font-size: 16px; transition: background 0.3s ease;">
                            –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å API
                        </button>
                        <div id="api-result" style="margin-top: 20px; padding: 15px; background: #f8f9fa; border-radius: 5px; display: none;">
                            <strong style="color: #2c3e50;">–†–µ–∑—É–ª—å—Ç–∞—Ç:</strong>
                            <pre id="api-output" style="background: white; padding: 15px; border-radius: 5px; overflow-x: auto; margin-top: 10px; border: 1px solid #ddd; font-size: 12px;"></pre>
                        </div>
                    </div>
                </div>
                <div style="text-align: center; margin-top: 25px;">
                    <a href="/api/recipes/" target="_blank" style="color: #e74c3c; text-decoration: none; font-weight: bold; padding: 10px 20px; border: 2px solid #e74c3c; border-radius: 5px; transition: all 0.3s ease;">
                        üîó –û—Ç–∫—Ä—ã—Ç—å API –≤ –±—Ä–∞—É–∑–µ—Ä–µ
                    </a>
                </div>
            </div>
        </section>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–∫—Ü–∏—é –ø–æ—Å–ª–µ features –∏–ª–∏ –ø–µ—Ä–µ–¥ —Ñ—É—Ç–µ—Ä–æ–º
    const featuresSection = document.querySelector('.features');
    const quickStatsSection = document.querySelector('.quick-stats');
    
    if (featuresSection) {
        featuresSection.insertAdjacentHTML('afterend', apiDemoHTML);
    } else if (quickStatsSection) {
        quickStatsSection.insertAdjacentHTML('afterend', apiDemoHTML);
    } else {
        // –ï—Å–ª–∏ –Ω–µ—Ç —Å–µ–∫—Ü–∏–π, –¥–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥ —Ñ—É—Ç–µ—Ä–æ–º
        const main = document.querySelector('main');
        if (main) {
            main.insertAdjacentHTML('beforeend', apiDemoHTML);
        }
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API
async function testAPI() {
    const api = new CookBookAPI();
    const resultDiv = document.getElementById('api-result');
    const outputDiv = document.getElementById('api-output');
    const button = event.target;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    resultDiv.style.display = 'block';
    outputDiv.textContent = 'üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º API...';
    button.textContent = '–¢–µ—Å—Ç–∏—Ä—É–µ–º...';
    button.disabled = true;
    
    try {
        const recipes = await api.getRecipes();
        const categories = await api.getCategories();
        
        const result = {
            status: '‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ',
            recipes_count: recipes?.count || 0,
            categories_count: categories?.count || 0,
            sample_recipe: recipes?.results?.[0] ? {
                id: recipes.results[0].id,
                title: recipes.results[0].title,
                cooking_time: recipes.results[0].cooking_time
            } : '–ù–µ—Ç —Ä–µ—Ü–µ–ø—Ç–æ–≤',
            sample_category: categories?.results?.[0] || '–ù–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π',
            endpoints: {
                recipes: '/api/recipes/',
                categories: '/api/categories/'
            }
        };
        
        outputDiv.textContent = JSON.stringify(result, null, 2);
    } catch (error) {
        outputDiv.textContent = '‚ùå –û—à–∏–±–∫–∞: ' + error.message + '\n\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:\n1. –ó–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–µ—Ä\n2. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ DRF\n3. –ï—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ –ë–î';
    } finally {
        button.textContent = '–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å API';
        button.disabled = false;
    }
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –ø–æ–∏—Å–∫–∞
function setupSearchValidation() {
    const searchForm = document.querySelector('.search-form');
    if (searchForm) {
        const searchInput = searchForm.querySelector('input[type="text"]');
        if (searchInput) {
            searchInput.addEventListener('input', function(e) {
                if (this.value.length > 100) {
                    this.value = this.value.substring(0, 100);
                    alert('–ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 100 —Å–∏–º–≤–æ–ª–æ–≤');
                }
            });
        }
    }
}

// –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤
function updateRecipeCounter() {
    const recipeCards = document.querySelectorAll('.recipe-card');
    if (recipeCards.length > 0) {
        const counter = document.createElement('div');
        counter.style.cssText = 'position: fixed; top: 80px; right: 20px; background: #e74c3c; color: white; padding: 10px; border-radius: 5px; z-index: 1000;';
        counter.textContent = `üìö –†–µ—Ü–µ–ø—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: ${recipeCards.length}`;
        document.body.appendChild(counter);
        
        setTimeout(() => {
            counter.remove();
        }, 3000);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–∫—Ü–∏—é API –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    if (window.location.pathname === '/') {
        createAPIDemoSection();
    }
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é —Ñ–æ—Ä–º
    setupSearchValidation();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö —Å —Ä–µ—Ü–µ–ø—Ç–∞–º–∏
    if (window.location.pathname.includes('/recipes')) {
        updateRecipeCounter();
    }
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –≤ –∫–æ–Ω—Å–æ–ª–∏
    const api = new CookBookAPI();
    api.demonstrateAPI();
    
    console.log('üöÄ CookBook JavaScript –∑–∞–≥—Ä—É–∂–µ–Ω!');
    console.log('üìñ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏: testAPI(), CookBookAPI');
});